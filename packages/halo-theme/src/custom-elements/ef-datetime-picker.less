@import '@refinitiv-ui/elemental-theme/src/custom-elements/ef-datetime-picker';

:host {
  [part=calendar] {
    width: 196px;
    padding: 4px 3px;
  }

  [part=list] {
    margin-top: 2px;
    border: 1px solid @scheme-color-primary;
    background-color: @calendar-background-color;
  }

  &[range] {
    width: (2 * @input-width);
  }

  [part=timepicker-wrapper] {
    box-shadow: none;
    padding: 0 3px 4px 3px;
  }

  [part=button] {
    color: inherit;
    outline: none;
    border-left: @input-border;
    border-left-color: inherit;

    & when (@variant = light) {
      color: @control-border-color;
    }

    &:hover, &:focus {
      border-left-color: @input-focused-border-color;
      color: @button-hover-text-color;
      background: @button-hover-background-color;
    
      &::after { // draws faux border on control
        content: '';
        display: block;
        position: absolute;
        border-color: transparent;
        top: -@input-border-width;
        right: -@input-border-width;
        bottom: -@input-border-width;
        left: -@input-border-width;
        border: @input-border;
        border-color: @input-focused-border-color;
        pointer-events: none;
      }
    }
  }

  &[disabled] {
    border-color: @input-disabled-border-color;
    color: @input-disabled-text-color;
  }

  &[disabled], &[popup-disabled] {
    [part=button] {
      color: @input-disabled-text-color;
    }
  }

  &[readonly]:not([focused]) {
    border-color: @input-disabled-border-color;

    [part=button] {
      color: @input-disabled-text-color;
    }
  }

  &[warning]:not([focused]) {
    border-color: @control-warning-color;
  }

  &[error]:not([focused]) {
    border-color: @control-error-color;
  }

  &[warning]:hover:not([readonly]):not([focused]) {
    border-color: @control-hover-warning-color;
  }

  &[warning][disabled],
  &[warning][readonly]:not([focused]) {
    border-color: fade(@control-hover-warning-color, 50%);
  }

  &[error]:hover:not([readonly]):not([focused])  {
    border-color: @control-hover-error-color;
  }

  &[error][disabled],
  &[error][readonly]:not([focused]) {
    border-color: fade(@control-hover-error-color, 50%);
  }

  &[focused],
  &[focused][error][warning],
  &:not([disabled]):not([popup-disabled]):not([error]):not([warning]):hover {
    [part=button]:not(:hover):not(:focus) {
      color: @scheme-color-secondary;

      & when (@variant = light) {
        color: @scheme-color-primary;
      }
    }
  }
}
