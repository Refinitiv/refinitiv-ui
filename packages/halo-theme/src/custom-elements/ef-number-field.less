@import (reference) './ef-text-field.less';

:host {
  &:extend(:host all);

  [part='input'] {
    appearance: textfield;
  }

  [part='spinner-up'],
  [part='spinner-down'] {
    line-height: 0;
    min-width: 22px;
    color: @input-text-color;
  }

  [part='spinner'] {
    height: 100%;
    margin-left: 8px;
    border-left: inherit;
    border-color: inherit;
  }

  // if it has spinner, remove padding-right from text-field and use spinner's margin instead
  &:not([no-spinner]) {
    padding: 0 0 0 8px;
  }

  // no border in transparent mode
  &[transparent],
  &[transparent] [part='spinner'] {
    border: none;
  }

  // hover state
  &:hover:not([readonly]) {
    [part='spinner-up'],
    [part='spinner-down'] {
      color: @scheme-color-secondary;
      & when (@variant = light) {
        color: @scheme-color-primary;
      }
      &:hover {
        color: @button-hover-text-color;
        background-color: @button-hover-background-color;
      }
      &:active {
        color: @button-pressed-text-color;
        background: @button-pressed-background-color;
      }
    }
  }

  // border color of control should be focused color when spinner is hovered
  &:not([transparent]):not([readonly]) [part='spinner']:hover {
    border-left-color: @input-focused-border-color !important;
    border-left-style: @input-border-style !important;
    &::after {
      content: '';
      border-width: inherit;
      border: @input-border-width @input-border-style @input-focused-border-color;
      position: absolute;
      top: -1px;
      right: -1px;
      bottom: -1px;
      left: -1px;
      pointer-events: none;
    }
  }

  // focus state
  &[focused] {
    [part='spinner-up'],
    [part='spinner-down'] {
      color: @scheme-color-secondary;
      & when (@variant = light) {
        color: @scheme-color-primary;
      }
    }
  }

  // disable and readonly state
  &[disabled],
  &[readonly]:not([focused]) {
    [part='spinner-up'],
    [part='spinner-down'] {
      color: @input-disabled-text-color;
    }
    &[error] [part='spinner'] {
      border-color: fade(@control-hover-error-color, 50%);
    }
    &[warning] [part='spinner'] {
      border-color: fade(@control-hover-warning-color, 50%);
    }
  }
}
